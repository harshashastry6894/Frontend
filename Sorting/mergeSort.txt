Merge Sort:
	A sorting algorithm which works on divide and conqure rule
	
Implemenation:
	psuedo code:
		1. create an empty array, take a look at the smallest values in each inpiut arry
		2. while there are still values
            1. if a[j] > a[j+1] -> swap
            2. return sorted array

Code:
function merge(arr1, arr2) {
    let res = [];
    let i = 0;
    let j = 0;
    while(i < arr1.length && j < arr2.length) {
        if(arr2[j] > arr1[i]) {
            res.push(arr1[i]);
            i++;
        } else {
            res.push(arr2[j]);
            j++;
        }        
    }
    while(i < arr1.length) {
         res.push(arr1[i]);
            i++;
    }
    while(j < arr2.length) {
         res.push(arr1[j]);
            j++;
    }
}

function mergeSort(arr) {
    if(arr.length <= 1) return arr;
    let mid = Math.floor(arr.length / 2);
    let left = mergeSort(arr.slice(0, mid));
    let right = mergeSort(arr.slice(mid));
    return merge(left, right);
}

time complexity
	best worst naverage: O(nlogn)
	
space complexity
    O(n)