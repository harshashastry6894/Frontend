Binary heaps:
	very similar to BST but with some different rules
	In MaxBinaryHeap parent node is always greater than child nodes
	In MinBinaryHeap parent node is always lesser than child nodes
	Binary heaps are used to implement prority queues which are very commonly used data structure

Representation:
	for any given node at index n left child will be at index 2n+1 and right child is at index 2n+2
	for any child node at index n its parent is at index (n-1)/2
	
	100,19,36,17,12,25,5,9,15,6,11,13,8,1,4
	
Code:
class MaxBinaryHeap {
    constructor(){
        this.values = [];
    }
    insert(element){
        this.values.push(element);
        this.bubbleUp();
    }
    bubbleUp(){
        let idx = this.values.length - 1;
        const element = this.values[idx];
        while(idx > 0){
            let parentIdx = Math.floor((idx - 1)/2);
            let parent = this.values[parentIdx];
            if(element <= parent) break;
            this.values[parentIdx] = element;
            this.values[idx] = parent;
            idx = parentIdx;
        }
    }
}

let heap = new MaxBinaryHeap();
heap.insert(41);
heap.insert(39);
heap.insert(33);
heap.insert(18);
heap.insert(27);
heap.insert(12);
heap.insert(55);



